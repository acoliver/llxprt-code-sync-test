npm warn exec The following package was not found and will be installed: github:acoliver/llxprt-code
Right, cherry-picking. I'll handle commits sequentially, running `npm run build` after each to catch and fix any issues before proceeding. First, I'll confirm the `upstream` remote is configured.Okay, `upstream` is correct. I'm starting the cherry-picks. First, `327f9156`, then I'll run `npm run build` to check for errors before continuing.Cherry-pick successful. Now, building to check for issues.The build failed. It seems like a dependency is missing. I'll install `chalk` and try buildingThe build completed successfully. I will now proceed with the next cherry-pick.A conflict occurred. I'll examine the file to resolve it, keeping our project's custom phrases while adding the new one from upstream.I'll merge the conflict by taking the upstream changes, as our custom phrases are not present in this file. Then I'll continue with the cherry-pick.Now that I've resolved the conflict, I will continue the cherry-pick.Cherry-pick successful. Now, building to check for issues.The build failed with a typo in `packages/cli/src/ui/hooks/usePhraseCycler.ts`. I will correct `phraseIntervalrRef` to `phraseIntervalRef` and rebuild.A build error occurred due to a typo. I'll correct `phraseIntervalrRefI'll fix the typo and rebuild.Now that I've fixed the typo, I'll rebuild.Build successful. I'll amend the previous commit with this fix and then proceed with the next cherry-pick.Now, I'll cherry-pick the next commit.Cherry-pick successful. Now, building to check for issues.Build successful. Proceeding to the next cherry-pick.A conflict occurred. I'll examine the file to resolve it, keeping our project's custom logic while integrating the upstream fix.I'll resolve the conflict by taking the upstream changes, as they add a test for the `DEV` environment variable, which is a good addition. Then I'll continue with the cherry-pick.Now that I've resolved the conflict, I will continue the cherry-pick.Cherry-pick successful. Now, building to check for issues.Build successful. Proceeding to the next cherry-pick.Cherry-pick successful. Now, building to check for issues.Build successful. Proceeding to the next cherry-pick.Cherry-pick successful. Now, building to check for issues.Build successful. Proceeding to the next cherry-pick.A conflict occurred in multiple `package.json` files and `package-lock.json`. This is likely due to a version bump. I will inspect the conflicts and resolve them, keeping our package names and other customizations.I'll resolve the conflicts, starting with the root `package.json`, by updating the version to `0.1.15` while preserving our custom name, repository, and sandbox URI.Next, I'll update the sandbox URI in `package.json`.Now I'll resolve the conflict in `packages/cli/package.json`.I'll resolve the conflicts in `packages/cli/package.json` by updating the version to `0.1.15` and keeping our custom name and description. I will also update the dependency on `@vybestack/llxprt-code-core` to the new version.I will now update the sandbox URI and the core dependency version in `packages/cli/package.json`.Now I'll update the core dependency version.Now I'll resolve the conflict in `packages/core/package.json`.I'll resolve the conflicts in `packages/core/package.json` by updating the version to `0.1.15` and keeping our custom name and description.Now I'll resolve the conflict in `packages/vscode-ide-companion/package.json`.I'll resolve the conflicts in `packages/vscode-ide-companion/package.json` by updating the version to `0.1.15` and keeping our custom name, displayName, description, and publisher.Now that the `package.json` files are handled, I'll address the `package-lock.json` conflict. I'll do this by removing the conflicting file and running `npm install` to regenerate it based on the updated `package.json` files. This is safer than trying to manually resolve the complex conflicts in a lockfile.Now that the conflicts are resolved and `package-lock.json` is regenerated, I'll continue the cherry-pick.